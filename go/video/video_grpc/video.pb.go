// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: video.proto

package video_grpc

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VideoPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	VideoUrl          string               `protobuf:"bytes,2,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
	Title             string               `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	ThumbnailImageUrl string               `protobuf:"bytes,4,opt,name=thumbnail_image_url,json=thumbnailImageUrl,proto3" json:"thumbnail_image_url,omitempty"`
	Description       string               `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt         *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	UserId            string               `protobuf:"bytes,8,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Tags              []string             `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Private           bool                 `protobuf:"varint,10,opt,name=private,proto3" json:"private,omitempty"`
	Adult             bool                 `protobuf:"varint,11,opt,name=adult,proto3" json:"adult,omitempty"`
	ExternalCutout    bool                 `protobuf:"varint,12,opt,name=external_cutout,json=externalCutout,proto3" json:"external_cutout,omitempty"`
	IsAd              bool                 `protobuf:"varint,13,opt,name=is_ad,json=isAd,proto3" json:"is_ad,omitempty"`
}

func (x *VideoPayload) Reset() {
	*x = VideoPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPayload) ProtoMessage() {}

func (x *VideoPayload) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPayload.ProtoReflect.Descriptor instead.
func (*VideoPayload) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{0}
}

func (x *VideoPayload) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VideoPayload) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *VideoPayload) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoPayload) GetThumbnailImageUrl() string {
	if x != nil {
		return x.ThumbnailImageUrl
	}
	return ""
}

func (x *VideoPayload) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VideoPayload) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VideoPayload) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *VideoPayload) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VideoPayload) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VideoPayload) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *VideoPayload) GetAdult() bool {
	if x != nil {
		return x.Adult
	}
	return false
}

func (x *VideoPayload) GetExternalCutout() bool {
	if x != nil {
		return x.ExternalCutout
	}
	return false
}

func (x *VideoPayload) GetIsAd() bool {
	if x != nil {
		return x.IsAd
	}
	return false
}

type VideoMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId            string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Title             string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description       string   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ThumbnailImageUrl string   `protobuf:"bytes,5,opt,name=thumbnail_image_url,json=thumbnailImageUrl,proto3" json:"thumbnail_image_url,omitempty"`
	Tags              []string `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	Private           bool     `protobuf:"varint,7,opt,name=private,proto3" json:"private,omitempty"`
	Adult             bool     `protobuf:"varint,8,opt,name=adult,proto3" json:"adult,omitempty"`
	ExternalCutout    bool     `protobuf:"varint,9,opt,name=external_cutout,json=externalCutout,proto3" json:"external_cutout,omitempty"`
	IsAd              bool     `protobuf:"varint,10,opt,name=is_ad,json=isAd,proto3" json:"is_ad,omitempty"`
}

func (x *VideoMeta) Reset() {
	*x = VideoMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoMeta) ProtoMessage() {}

func (x *VideoMeta) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoMeta.ProtoReflect.Descriptor instead.
func (*VideoMeta) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{1}
}

func (x *VideoMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *VideoMeta) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VideoMeta) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VideoMeta) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *VideoMeta) GetThumbnailImageUrl() string {
	if x != nil {
		return x.ThumbnailImageUrl
	}
	return ""
}

func (x *VideoMeta) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *VideoMeta) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

func (x *VideoMeta) GetAdult() bool {
	if x != nil {
		return x.Adult
	}
	return false
}

func (x *VideoMeta) GetExternalCutout() bool {
	if x != nil {
		return x.ExternalCutout
	}
	return false
}

func (x *VideoMeta) GetIsAd() bool {
	if x != nil {
		return x.IsAd
	}
	return false
}

type ThumbnailMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ContentType string `protobuf:"bytes,2,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
}

func (x *ThumbnailMeta) Reset() {
	*x = ThumbnailMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThumbnailMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThumbnailMeta) ProtoMessage() {}

func (x *ThumbnailMeta) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThumbnailMeta.ProtoReflect.Descriptor instead.
func (*ThumbnailMeta) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{2}
}

func (x *ThumbnailMeta) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ThumbnailMeta) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

type UploadVideoInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*UploadVideoInput_Meta
	//	*UploadVideoInput_Video
	Value isUploadVideoInput_Value `protobuf_oneof:"value"`
}

func (x *UploadVideoInput) Reset() {
	*x = UploadVideoInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadVideoInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadVideoInput) ProtoMessage() {}

func (x *UploadVideoInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadVideoInput.ProtoReflect.Descriptor instead.
func (*UploadVideoInput) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{3}
}

func (m *UploadVideoInput) GetValue() isUploadVideoInput_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *UploadVideoInput) GetMeta() *VideoMeta {
	if x, ok := x.GetValue().(*UploadVideoInput_Meta); ok {
		return x.Meta
	}
	return nil
}

func (x *UploadVideoInput) GetVideo() []byte {
	if x, ok := x.GetValue().(*UploadVideoInput_Video); ok {
		return x.Video
	}
	return nil
}

type isUploadVideoInput_Value interface {
	isUploadVideoInput_Value()
}

type UploadVideoInput_Meta struct {
	Meta *VideoMeta `protobuf:"bytes,1,opt,name=meta,proto3,oneof"`
}

type UploadVideoInput_Video struct {
	Video []byte `protobuf:"bytes,2,opt,name=video,proto3,oneof"`
}

func (*UploadVideoInput_Meta) isUploadVideoInput_Value() {}

func (*UploadVideoInput_Video) isUploadVideoInput_Value() {}

type UploadThumbnailInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Value:
	//
	//	*UploadThumbnailInput_Meta
	//	*UploadThumbnailInput_ThumbnailImage
	Value isUploadThumbnailInput_Value `protobuf_oneof:"value"`
}

func (x *UploadThumbnailInput) Reset() {
	*x = UploadThumbnailInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadThumbnailInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadThumbnailInput) ProtoMessage() {}

func (x *UploadThumbnailInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadThumbnailInput.ProtoReflect.Descriptor instead.
func (*UploadThumbnailInput) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{4}
}

func (m *UploadThumbnailInput) GetValue() isUploadThumbnailInput_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *UploadThumbnailInput) GetMeta() *ThumbnailMeta {
	if x, ok := x.GetValue().(*UploadThumbnailInput_Meta); ok {
		return x.Meta
	}
	return nil
}

func (x *UploadThumbnailInput) GetThumbnailImage() []byte {
	if x, ok := x.GetValue().(*UploadThumbnailInput_ThumbnailImage); ok {
		return x.ThumbnailImage
	}
	return nil
}

type isUploadThumbnailInput_Value interface {
	isUploadThumbnailInput_Value()
}

type UploadThumbnailInput_Meta struct {
	Meta *ThumbnailMeta `protobuf:"bytes,1,opt,name=meta,proto3,oneof"`
}

type UploadThumbnailInput_ThumbnailImage struct {
	ThumbnailImage []byte `protobuf:"bytes,2,opt,name=thumbnail_image,json=thumbnailImage,proto3,oneof"`
}

func (*UploadThumbnailInput_Meta) isUploadThumbnailInput_Value() {}

func (*UploadThumbnailInput_ThumbnailImage) isUploadThumbnailInput_Value() {}

type UploadThumbnailPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UploadThumbnailPayload) Reset() {
	*x = UploadThumbnailPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadThumbnailPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadThumbnailPayload) ProtoMessage() {}

func (x *UploadThumbnailPayload) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadThumbnailPayload.ProtoReflect.Descriptor instead.
func (*UploadThumbnailPayload) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{5}
}

func (x *UploadThumbnailPayload) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type WatchCountInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId string `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
}

func (x *WatchCountInput) Reset() {
	*x = WatchCountInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchCountInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchCountInput) ProtoMessage() {}

func (x *WatchCountInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchCountInput.ProtoReflect.Descriptor instead.
func (*WatchCountInput) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{6}
}

func (x *WatchCountInput) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

type WatchCountPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *WatchCountPayload) Reset() {
	*x = WatchCountPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchCountPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchCountPayload) ProtoMessage() {}

func (x *WatchCountPayload) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchCountPayload.ProtoReflect.Descriptor instead.
func (*WatchCountPayload) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{7}
}

func (x *WatchCountPayload) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type IncrementWatchCountInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId string `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *IncrementWatchCountInput) Reset() {
	*x = IncrementWatchCountInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncrementWatchCountInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncrementWatchCountInput) ProtoMessage() {}

func (x *IncrementWatchCountInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncrementWatchCountInput.ProtoReflect.Descriptor instead.
func (*IncrementWatchCountInput) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{8}
}

func (x *IncrementWatchCountInput) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *IncrementWatchCountInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type CutVideoInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoId string `protobuf:"bytes,1,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`
	UserId  string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Start   int32  `protobuf:"varint,3,opt,name=start,proto3" json:"start,omitempty"`
	End     int32  `protobuf:"varint,4,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *CutVideoInput) Reset() {
	*x = CutVideoInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CutVideoInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CutVideoInput) ProtoMessage() {}

func (x *CutVideoInput) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CutVideoInput.ProtoReflect.Descriptor instead.
func (*CutVideoInput) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{9}
}

func (x *CutVideoInput) GetVideoId() string {
	if x != nil {
		return x.VideoId
	}
	return ""
}

func (x *CutVideoInput) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CutVideoInput) GetStart() int32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *CutVideoInput) GetEnd() int32 {
	if x != nil {
		return x.End
	}
	return 0
}

type CutVideoPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoUrl string `protobuf:"bytes,1,opt,name=video_url,json=videoUrl,proto3" json:"video_url,omitempty"`
}

func (x *CutVideoPayload) Reset() {
	*x = CutVideoPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CutVideoPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CutVideoPayload) ProtoMessage() {}

func (x *CutVideoPayload) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CutVideoPayload.ProtoReflect.Descriptor instead.
func (*CutVideoPayload) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{10}
}

func (x *CutVideoPayload) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

type VideoID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VideoID) Reset() {
	*x = VideoID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoID) ProtoMessage() {}

func (x *VideoID) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoID.ProtoReflect.Descriptor instead.
func (*VideoID) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{11}
}

func (x *VideoID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VideoUserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VideoUserID) Reset() {
	*x = VideoUserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoUserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoUserID) ProtoMessage() {}

func (x *VideoUserID) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoUserID.ProtoReflect.Descriptor instead.
func (*VideoUserID) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{12}
}

func (x *VideoUserID) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type VideosResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Videos []*VideoPayload `protobuf:"bytes,1,rep,name=videos,proto3" json:"videos,omitempty"`
}

func (x *VideosResponse) Reset() {
	*x = VideosResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideosResponse) ProtoMessage() {}

func (x *VideosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideosResponse.ProtoReflect.Descriptor instead.
func (*VideosResponse) Descriptor() ([]byte, []int) {
	return file_video_proto_rawDescGZIP(), []int{13}
}

func (x *VideosResponse) GetVideos() []*VideoPayload {
	if x != nil {
		return x.Videos
	}
	return nil
}

var File_video_proto protoreflect.FileDescriptor

var file_video_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb4, 0x03, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18,
	0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x74, 0x6f, 0x75, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43, 0x75,
	0x74, 0x6f, 0x75, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x41, 0x64, 0x22, 0x9e, 0x02, 0x0a, 0x09, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x75, 0x6c, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x63, 0x75, 0x74, 0x6f, 0x75, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x43,
	0x75, 0x74, 0x6f, 0x75, 0x74, 0x12, 0x13, 0x0a, 0x05, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x69, 0x73, 0x41, 0x64, 0x22, 0x42, 0x0a, 0x0d, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x5b,
	0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x65,
	0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x76, 0x0a, 0x14, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e,
	0x61, 0x69, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12,
	0x29, 0x0a, 0x0f, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0e, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x32, 0x0a, 0x16, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x2c, 0x0a, 0x0f, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x4e, 0x0a, 0x18, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x6b, 0x0a, 0x0d, 0x43, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x2e, 0x0a,
	0x0f, 0x43, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x22, 0x19, 0x0a,
	0x07, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x0b, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3d, 0x0a, 0x0e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x06,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x32, 0x8e, 0x04, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x15, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x12, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x15, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a,
	0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x0e, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x1a, 0x13, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3d, 0x0a, 0x0b, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x17, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x13, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x28, 0x01, 0x12, 0x4f, 0x0a, 0x0f, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x2e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x75, 0x6d,
	0x62, 0x6e, 0x61, 0x69, 0x6c, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x1d, 0x2e, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61,
	0x69, 0x6c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x28, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x1a, 0x18, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x50, 0x0a, 0x13, 0x49,
	0x6e, 0x63, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e,
	0x70, 0x75, 0x74, 0x1a, 0x18, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x38, 0x0a,
	0x08, 0x43, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x14, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x43, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x16, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x43, 0x75, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_proto_rawDescOnce sync.Once
	file_video_proto_rawDescData = file_video_proto_rawDesc
)

func file_video_proto_rawDescGZIP() []byte {
	file_video_proto_rawDescOnce.Do(func() {
		file_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_proto_rawDescData)
	})
	return file_video_proto_rawDescData
}

var file_video_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_video_proto_goTypes = []any{
	(*VideoPayload)(nil),             // 0: video.VideoPayload
	(*VideoMeta)(nil),                // 1: video.VideoMeta
	(*ThumbnailMeta)(nil),            // 2: video.ThumbnailMeta
	(*UploadVideoInput)(nil),         // 3: video.UploadVideoInput
	(*UploadThumbnailInput)(nil),     // 4: video.UploadThumbnailInput
	(*UploadThumbnailPayload)(nil),   // 5: video.UploadThumbnailPayload
	(*WatchCountInput)(nil),          // 6: video.WatchCountInput
	(*WatchCountPayload)(nil),        // 7: video.WatchCountPayload
	(*IncrementWatchCountInput)(nil), // 8: video.IncrementWatchCountInput
	(*CutVideoInput)(nil),            // 9: video.CutVideoInput
	(*CutVideoPayload)(nil),          // 10: video.CutVideoPayload
	(*VideoID)(nil),                  // 11: video.VideoID
	(*VideoUserID)(nil),              // 12: video.VideoUserID
	(*VideosResponse)(nil),           // 13: video.VideosResponse
	(*timestamp.Timestamp)(nil),      // 14: google.protobuf.Timestamp
	(*empty.Empty)(nil),              // 15: google.protobuf.Empty
}
var file_video_proto_depIdxs = []int32{
	14, // 0: video.VideoPayload.created_at:type_name -> google.protobuf.Timestamp
	14, // 1: video.VideoPayload.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 2: video.UploadVideoInput.meta:type_name -> video.VideoMeta
	2,  // 3: video.UploadThumbnailInput.meta:type_name -> video.ThumbnailMeta
	0,  // 4: video.VideosResponse.videos:type_name -> video.VideoPayload
	15, // 5: video.VideoService.Videos:input_type -> google.protobuf.Empty
	12, // 6: video.VideoService.VideosByUserID:input_type -> video.VideoUserID
	11, // 7: video.VideoService.Video:input_type -> video.VideoID
	3,  // 8: video.VideoService.UploadVideo:input_type -> video.UploadVideoInput
	4,  // 9: video.VideoService.UploadThumbnail:input_type -> video.UploadThumbnailInput
	6,  // 10: video.VideoService.WatchCount:input_type -> video.WatchCountInput
	8,  // 11: video.VideoService.IncrementWatchCount:input_type -> video.IncrementWatchCountInput
	9,  // 12: video.VideoService.CutVideo:input_type -> video.CutVideoInput
	13, // 13: video.VideoService.Videos:output_type -> video.VideosResponse
	13, // 14: video.VideoService.VideosByUserID:output_type -> video.VideosResponse
	0,  // 15: video.VideoService.Video:output_type -> video.VideoPayload
	0,  // 16: video.VideoService.UploadVideo:output_type -> video.VideoPayload
	5,  // 17: video.VideoService.UploadThumbnail:output_type -> video.UploadThumbnailPayload
	7,  // 18: video.VideoService.WatchCount:output_type -> video.WatchCountPayload
	7,  // 19: video.VideoService.IncrementWatchCount:output_type -> video.WatchCountPayload
	10, // 20: video.VideoService.CutVideo:output_type -> video.CutVideoPayload
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_video_proto_init() }
func file_video_proto_init() {
	if File_video_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*VideoPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*VideoMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ThumbnailMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*UploadVideoInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UploadThumbnailInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*UploadThumbnailPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*WatchCountInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*WatchCountPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*IncrementWatchCountInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*CutVideoInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*CutVideoPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*VideoID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*VideoUserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*VideosResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_video_proto_msgTypes[3].OneofWrappers = []any{
		(*UploadVideoInput_Meta)(nil),
		(*UploadVideoInput_Video)(nil),
	}
	file_video_proto_msgTypes[4].OneofWrappers = []any{
		(*UploadThumbnailInput_Meta)(nil),
		(*UploadThumbnailInput_ThumbnailImage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_proto_goTypes,
		DependencyIndexes: file_video_proto_depIdxs,
		MessageInfos:      file_video_proto_msgTypes,
	}.Build()
	File_video_proto = out.File
	file_video_proto_rawDesc = nil
	file_video_proto_goTypes = nil
	file_video_proto_depIdxs = nil
}
