syntax = "proto3";
package video;

option go_package = "/video_grpc";

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

message VideoPayload {
  string id = 1;
  string video_url = 2;
  string title = 3;
  string thumbnail_image_url = 4;
  string description = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
  string user_id = 8;
  repeated string tags = 9;
  bool private = 10;
  bool adult = 11;
  bool external_cutout = 12;
  bool is_ad = 13;
  int32 watch_count = 14;
}

message VideoMeta {
  string id = 1;
  string user_id = 2;
  string title = 3;
  string description = 4;
  string thumbnail_image_url = 5;
  repeated string tags = 6;
  bool private = 7;
  bool adult = 8;
  bool external_cutout = 9;
  bool is_ad = 10;
}

message ThumbnailMeta {
  string id = 1;
  string content_type = 2;
}

message UploadVideoInput {
  oneof value {
    VideoMeta meta = 1;
    bytes video = 2;
  }
}

message UploadThumbnailInput {
  oneof value {
    ThumbnailMeta meta = 1;
    bytes thumbnail_image = 2;
  }

}

message UploadThumbnailPayload {
  bool success = 1;
}

message WatchCountInput {
  string video_id = 1;
}

message WatchCountPayload {
  int32 count = 1;
}

message IncrementWatchCountInput {
  string video_id = 1;
  string user_id = 2;
}

message CutVideoInput {
  string video_id = 1;
  string user_id = 2;
  int32 start = 3;
  int32 end = 4;
}

message CutVideoPayload {
  string video_url = 1;
}

service VideoService {
  rpc Videos(google.protobuf.Empty) returns (VideosResponse);
  rpc VideosByUserID(VideoUserID) returns (VideosResponse);
  rpc Video(VideoID) returns (VideoPayload);
  rpc UploadVideo(stream UploadVideoInput) returns (VideoPayload);
  rpc UploadThumbnail(stream UploadThumbnailInput) returns (UploadThumbnailPayload);
  rpc WatchCount(WatchCountInput) returns (WatchCountPayload);
  rpc IncrementWatchCount(IncrementWatchCountInput) returns (WatchCountPayload);
  rpc CutVideo(CutVideoInput) returns (CutVideoPayload);
}

message VideoID {
  string id = 1;
}

message VideoUserID {
  string id = 1;
}

message VideosResponse {
  repeated VideoPayload videos = 1;
}
